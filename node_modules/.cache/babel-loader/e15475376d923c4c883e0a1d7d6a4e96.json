{"ast":null,"code":"var _jsxFileName = \"D:\\\\reactjs\\\\kapoy-chat-app\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { Button } from \"@material-ui/core\";\nimport Main from \"./pages/Main\";\nimport { WebSocketLink } from \"@apollo/client/link/ws\";\nimport { getMainDefinition } from \"@apollo/client/utilities\";\nimport { setContext } from \"@apollo/client/link/context\";\nimport { ApolloClient, InMemoryCache, ApolloProvider, split, HttpLink, ApolloLink } from \"@apollo/client\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const {\n    loginWithRedirect,\n    getIdTokenClaims,\n    logout,\n    isAuthenticated\n  } = useAuth0();\n  const [token, setToken] = useState(\"\");\n  getIdTokenClaims().then(resp => {\n    console.log(resp);\n\n    if (resp) {\n      setToken(resp.__raw);\n    }\n  });\n  const wsLink = new WebSocketLink({\n    uri: process.env.REACT_APP_GRAPHQL_WEBSOCKET,\n    options: {\n      reconnect: true,\n      connectionParams: {\n        headers: {\n          Authorization: token ? `Bearer ${token}` : \"\"\n        }\n      }\n    }\n  });\n  const httpLink = new HttpLink({\n    uri: process.env.REACT_APP_GRAPHQL_ENDPOINT\n  });\n  const authLink = setContext((_, {\n    headers\n  }) => {\n    // get the authentication token from local cookie if it exists\n    return {\n      headers: { ...headers,\n        authorization: token ? `Bearer ${token}` : \"\"\n      }\n    };\n  });\n  const splitLink = split(({\n    query\n  }) => {\n    const definition = getMainDefinition(query);\n    return definition.kind === \"OperationDefinition\" && definition.operation === \"subscription\";\n  }, wsLink, httpLink);\n  const client = new ApolloClient({\n    cache: new InMemoryCache(),\n    link: ApolloLink.from([authLink, splitLink])\n  });\n  return /*#__PURE__*/_jsxDEV(ApolloProvider, {\n    client: client,\n    children: isAuthenticated ? /*#__PURE__*/_jsxDEV(Main, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: logo,\n          className: \"App-logo\",\n          alt: \"logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"App-link\",\n          onClick: () => {\n            loginWithRedirect();\n          },\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          variant: \"contained\",\n          color: \"primary\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"KhJovxEZ0rIJh0/Vj4rUYERRxVg=\", false, function () {\n  return [useAuth0];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/reactjs/kapoy-chat-app/src/App.js"],"names":["useAuth0","Button","Main","WebSocketLink","getMainDefinition","setContext","ApolloClient","InMemoryCache","ApolloProvider","split","HttpLink","ApolloLink","useState","App","loginWithRedirect","getIdTokenClaims","logout","isAuthenticated","token","setToken","then","resp","console","log","__raw","wsLink","uri","process","env","REACT_APP_GRAPHQL_WEBSOCKET","options","reconnect","connectionParams","headers","Authorization","httpLink","REACT_APP_GRAPHQL_ENDPOINT","authLink","_","authorization","splitLink","query","definition","kind","operation","client","cache","link","from","logo"],"mappings":"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","sourcesContent":["import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { Button } from \"@material-ui/core\";\nimport Main from \"./pages/Main\";\n\nimport { WebSocketLink } from \"@apollo/client/link/ws\";\nimport { getMainDefinition } from \"@apollo/client/utilities\";\nimport { setContext } from \"@apollo/client/link/context\";\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  split,\n  HttpLink,\n  ApolloLink,\n} from \"@apollo/client\";\nimport { useState } from \"react\";\n\nfunction App() {\n  const { loginWithRedirect, getIdTokenClaims, logout, isAuthenticated } =\n    useAuth0();\n  const [token, setToken] = useState(\"\");\n\n  getIdTokenClaims().then((resp) => {\n    console.log(resp);\n    if (resp) {\n      setToken(resp.__raw);\n    }\n  });\n\n  const wsLink = new WebSocketLink({\n    uri: process.env.REACT_APP_GRAPHQL_WEBSOCKET,\n    options: {\n      reconnect: true,\n      connectionParams: {\n        headers: {\n          Authorization: token ? `Bearer ${token}` : \"\",\n        },\n      },\n    },\n  });\n  const httpLink = new HttpLink({\n    uri: process.env.REACT_APP_GRAPHQL_ENDPOINT,\n  });\n  const authLink = setContext((_, { headers }) => {\n    // get the authentication token from local cookie if it exists\n    return {\n      headers: {\n        ...headers,\n        authorization: token ? `Bearer ${token}` : \"\",\n      },\n    };\n  });\n\n  const splitLink = split(\n    ({ query }) => {\n      const definition = getMainDefinition(query);\n      return (\n        definition.kind === \"OperationDefinition\" &&\n        definition.operation === \"subscription\"\n      );\n    },\n    wsLink,\n    httpLink\n  );\n\n  const client = new ApolloClient({\n    cache: new InMemoryCache(),\n    link: ApolloLink.from([authLink, splitLink]),\n  });\n\n  return (\n    <ApolloProvider client={client}>\n      {isAuthenticated ? (\n        <Main></Main>\n      ) : (\n        <div className=\"App\">\n          <header className=\"App-header\">\n            <img src={logo} className=\"App-logo\" alt=\"logo\" />\n            <Button\n              className=\"App-link\"\n              onClick={() => {\n                loginWithRedirect();\n              }}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              variant=\"contained\"\n              color=\"primary\"\n            >\n              Login\n            </Button>\n          </header>\n        </div>\n      )}\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}