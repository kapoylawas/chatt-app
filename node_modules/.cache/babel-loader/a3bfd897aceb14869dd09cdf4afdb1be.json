{"ast":null,"code":"var _jsxFileName = \"D:\\\\next_js\\\\ponk-chat-app-0.3.1\\\\src\\\\pages\\\\Main\\\\Contact\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport { gql, useQuery } from \"@apollo/client\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { Divider } from \"@material-ui/core\";\nimport { useRecoilState } from \"recoil\";\nimport ContactList from \"../../../components/ContactList\";\nimport { selectedUserState } from \"../../../recoil\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GET_USERS = gql`\n  query MyQuery(\n    $order_by: [users_order_by!] = { name: desc }\n    $_neq: String = \"\"\n  ) {\n    users(order_by: $order_by, where: { id: { _neq: $_neq } }) {\n      id\n      name\n      picture\n    }\n  }\n`;\n\nconst Contact = () => {\n  _s();\n\n  const {\n    user\n  } = useAuth0();\n  const {\n    data\n  } = useQuery(GET_USERS, {\n    variables: {\n      order_by: {\n        name: \"asc\"\n      },\n      _neq: user.sub\n    }\n  });\n  const setSelectedUser = useRecoilState(selectedUserState)[1];\n  const users = [{\n    id: null,\n    name: \"LOBI\"\n  }];\n\n  if (data && data.users) {\n    users.push(...data.users);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: users.map(u => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => setSelectedUser(u),\n        children: [/*#__PURE__*/_jsxDEV(ContactList, {\n          user: u\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this)]\n      }, u.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Contact, \"qquvfivL54qFFWhJ0D6nr+zav7o=\", false, function () {\n  return [useAuth0, useQuery, useRecoilState];\n});\n\n_c = Contact;\nexport default Contact;\n\nvar _c;\n\n$RefreshReg$(_c, \"Contact\");","map":{"version":3,"sources":["D:/next_js/ponk-chat-app-0.3.1/src/pages/Main/Contact/index.js"],"names":["gql","useQuery","useAuth0","Divider","useRecoilState","ContactList","selectedUserState","GET_USERS","Contact","user","data","variables","order_by","name","_neq","sub","setSelectedUser","users","id","push","map","u"],"mappings":";;;AAAA,SAASA,GAAT,EAAcC,QAAd,QAA8B,gBAA9B;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,SAASC,OAAT,QAAwB,mBAAxB;AACA,SAASC,cAAT,QAA+B,QAA/B;AACA,OAAOC,WAAP,MAAwB,iCAAxB;AACA,SAASC,iBAAT,QAAkC,iBAAlC;;AAEA,MAAMC,SAAS,GAAGP,GAAI;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAXA;;AAaA,MAAMQ,OAAO,GAAG,MAAM;AAAA;;AACpB,QAAM;AAAEC,IAAAA;AAAF,MAAWP,QAAQ,EAAzB;AACA,QAAM;AAAEQ,IAAAA;AAAF,MAAWT,QAAQ,CAACM,SAAD,EAAY;AACnCI,IAAAA,SAAS,EAAE;AAAEC,MAAAA,QAAQ,EAAE;AAAEC,QAAAA,IAAI,EAAE;AAAR,OAAZ;AAA6BC,MAAAA,IAAI,EAAEL,IAAI,CAACM;AAAxC;AADwB,GAAZ,CAAzB;AAGA,QAAMC,eAAe,GAAGZ,cAAc,CAACE,iBAAD,CAAd,CAAkC,CAAlC,CAAxB;AACA,QAAMW,KAAK,GAAG,CAAC;AAAEC,IAAAA,EAAE,EAAE,IAAN;AAAYL,IAAAA,IAAI,EAAE;AAAlB,GAAD,CAAd;;AACA,MAAIH,IAAI,IAAIA,IAAI,CAACO,KAAjB,EAAwB;AACtBA,IAAAA,KAAK,CAACE,IAAN,CAAW,GAAGT,IAAI,CAACO,KAAnB;AACD;;AACD,sBACE;AAAA,cACGA,KAAK,CAACG,GAAN,CAAWC,CAAD,IAAO;AAChB,0BACE;AAAgB,QAAA,OAAO,EAAE,MAAML,eAAe,CAACK,CAAD,CAA9C;AAAA,gCACE,QAAC,WAAD;AAAa,UAAA,IAAI,EAAEA;AAAnB;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA,SAAUA,CAAC,CAACH,EAAZ;AAAA;AAAA;AAAA;AAAA,cADF;AAMD,KAPA;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAtBD;;GAAMV,O;UACaN,Q,EACAD,Q,EAGOG,c;;;KALpBI,O;AAwBN,eAAeA,OAAf","sourcesContent":["import { gql, useQuery } from \"@apollo/client\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { Divider } from \"@material-ui/core\";\nimport { useRecoilState } from \"recoil\";\nimport ContactList from \"../../../components/ContactList\";\nimport { selectedUserState } from \"../../../recoil\";\n\nconst GET_USERS = gql`\n  query MyQuery(\n    $order_by: [users_order_by!] = { name: desc }\n    $_neq: String = \"\"\n  ) {\n    users(order_by: $order_by, where: { id: { _neq: $_neq } }) {\n      id\n      name\n      picture\n    }\n  }\n`;\n\nconst Contact = () => {\n  const { user } = useAuth0();\n  const { data } = useQuery(GET_USERS, {\n    variables: { order_by: { name: \"asc\" }, _neq: user.sub },\n  });\n  const setSelectedUser = useRecoilState(selectedUserState)[1];\n  const users = [{ id: null, name: \"LOBI\" }];\n  if (data && data.users) {\n    users.push(...data.users);\n  }\n  return (\n    <div>\n      {users.map((u) => {\n        return (\n          <div key={u.id} onClick={() => setSelectedUser(u)}>\n            <ContactList user={u}></ContactList>\n            <Divider></Divider>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default Contact;\n"]},"metadata":{},"sourceType":"module"}